"use strict";(self.webpackChunkswizzin_website=self.webpackChunkswizzin_website||[]).push([[7754,865],{4137:function(e,t,a){a.d(t,{Zo:function(){return c},kt:function(){return f}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function s(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?s(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):s(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function i(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},s=Object.keys(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)a=s[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var o=n.createContext({}),u=function(e){var t=n.useContext(o),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},c=function(e){var t=u(e.components);return n.createElement(o.Provider,{value:t},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,s=e.originalType,o=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),d=u(a),m=r,f=d["".concat(o,".").concat(m)]||d[m]||p[m]||s;return a?n.createElement(f,l(l({ref:t},c),{},{components:a})):n.createElement(f,l({ref:t},c))}));function f(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var s=a.length,l=new Array(s);l[0]=m;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:r,l[1]=i;for(var u=2;u<s;u++)l[u]=a[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},425:function(e,t,a){a.d(t,{Z:function(){return l}});var n=a(7294),r=a(6010),s="tabItem_Ymn6";function l(e){var t=e.children,a=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,r.Z)(s,l),hidden:a},t)}},4259:function(e,t,a){a.d(t,{Z:function(){return m}});var n=a(7462),r=a(7294),s=a(6010),l=a(1048),i=a(3609),o=a(1943),u=a(2957),c="tabList__CuJ",d="tabItem_LNqP";function p(e){var t,a,l=e.lazy,p=e.block,m=e.defaultValue,f=e.values,b=e.groupId,v=e.className,y=r.Children.map(e.children,(function(e){if((0,r.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),h=null!=f?f:y.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),k=(0,i.l)(h,(function(e,t){return e.value===t.value}));if(k.length>0)throw new Error('Docusaurus error: Duplicate values "'+k.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var g=null===m?m:null!=(t=null!=m?m:null==(a=y.find((function(e){return e.props.default})))?void 0:a.props.value)?t:y[0].props.value;if(null!==g&&!h.some((function(e){return e.value===g})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+h.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,o.U)(),T=w.tabGroupChoices,x=w.setTabGroupChoices,O=(0,r.useState)(g),N=O[0],Z=O[1],E=[],I=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var M=T[b];null!=M&&M!==N&&h.some((function(e){return e.value===M}))&&Z(M)}var S=function(e){var t=e.currentTarget,a=E.indexOf(t),n=h[a].value;n!==N&&(I(t),Z(n),null!=b&&x(b,String(n)))},C=function(e){var t,a=null;switch(e.key){case"Enter":S(e);break;case"ArrowRight":var n,r=E.indexOf(e.currentTarget)+1;a=null!=(n=E[r])?n:E[0];break;case"ArrowLeft":var s,l=E.indexOf(e.currentTarget)-1;a=null!=(s=E[l])?s:E[E.length-1]}null==(t=a)||t.focus()};return r.createElement("div",{className:(0,s.Z)("tabs-container",c)},r.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,s.Z)("tabs",{"tabs--block":p},v)},h.map((function(e){var t=e.value,a=e.label,l=e.attributes;return r.createElement("li",(0,n.Z)({role:"tab",tabIndex:N===t?0:-1,"aria-selected":N===t,key:t,ref:function(e){return E.push(e)},onKeyDown:C,onClick:S},l,{className:(0,s.Z)("tabs__item",d,null==l?void 0:l.className,{"tabs__item--active":N===t})}),null!=a?a:t)}))),l?(0,r.cloneElement)(y.filter((function(e){return e.props.value===N}))[0],{className:"margin-top--md"}):r.createElement("div",{className:"margin-top--md"},y.map((function(e,t){return(0,r.cloneElement)(e,{key:t,hidden:e.props.value!==N})}))))}function m(e){var t=(0,l.Z)();return r.createElement(p,(0,n.Z)({key:String(t)},e))}},698:function(e,t,a){a.r(t),a.d(t,{assets:function(){return d},contentTitle:function(){return u},default:function(){return f},frontMatter:function(){return o},metadata:function(){return c},toc:function(){return p}});var n=a(7462),r=a(3366),s=(a(7294),a(4137)),l=a(9124),i=["components"],o={id:"medusa",title:"Medusa",sidebar_label:"Medusa"},u=void 0,c={unversionedId:"applications/medusa",id:"applications/medusa",title:"Medusa",description:"(py)Medusa is an automatic video library manager for TV Shows written in Python. It watches for new episodes of your favorite shows, and when they are posted it does its magic.",source:"@site/docs/applications/medusa.mdx",sourceDirName:"applications",slug:"/applications/medusa",permalink:"/applications/medusa",draft:!1,editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/applications/medusa.mdx",tags:[],version:"current",frontMatter:{id:"medusa",title:"Medusa",sidebar_label:"Medusa"},sidebar:"docs",previous:{title:"Lidarr",permalink:"/applications/lidarr"},next:{title:"Mylar",permalink:"/applications/mylar"}},d={},p=[{value:"Initial Setup",id:"initial-setup",level:2},{value:"How to Access",id:"how-to-access",level:2},{value:"Service Management",id:"service-management",level:2}],m={toc:p};function f(e){var t=e.components,a=(0,r.Z)(e,i);return(0,s.kt)("wrapper",(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("p",null,"(py)Medusa is an automatic video library manager for TV Shows written in Python. It watches for new episodes of your favorite shows, and when they are posted it does its magic."),(0,s.kt)("h2",{id:"initial-setup"},"Initial Setup"),(0,s.kt)("p",null,"Installing Medusa is easy. Simply issue the following command from SSH:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:"main",main:!0},"sudo box install medusa\n")),(0,s.kt)("p",null,"This command will install and configure medusa for your user."),(0,s.kt)("h2",{id:"how-to-access"},"How to Access"),(0,s.kt)("p",null,"After installation, you can access Medusa at the url: ",(0,s.kt)("inlineCode",{parentName:"p"},"https://<yourhostname.ltd>/medusa")),(0,s.kt)("h2",{id:"service-management"},"Service Management"),(0,s.kt)("p",null,"The systemd service file resides at:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-bash",metastring:"main",main:!0},"/etc/systemd/system/medusa.service\n")),(0,s.kt)(l.default,{service:"medusa",mdxType:"SystemdTabs"}))}f.isMDXComponent=!0},9124:function(e,t,a){a.r(t),a.d(t,{assets:function(){return m},contentTitle:function(){return d},default:function(){return v},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return f}});var n=a(7462),r=a(3366),s=(a(7294),a(4137)),l=a(4259),i=a(425),o=a(9319),u=["components"],c={},d=void 0,p={unversionedId:"snippets/systemdtabs",id:"snippets/systemdtabs",title:"systemdtabs",description:"<Tabs",source:"@site/docs/snippets/systemdtabs.mdx",sourceDirName:"snippets",slug:"/snippets/systemdtabs",permalink:"/snippets/systemdtabs",draft:!1,editUrl:"https://github.com/liaralabs/docs.swizzin.ltd/edit/master/docs/snippets/systemdtabs.mdx",tags:[],version:"current",frontMatter:{}},m={},f=[],b={toc:f};function v(e){var t=e.components,a=(0,r.Z)(e,u);return(0,s.kt)("wrapper",(0,n.Z)({},b,a,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"code"},(0,s.kt)(l.Z,{defaultValue:"start",values:[{label:"Status",value:"status"},{label:"Start",value:"start"},{label:"Stop",value:"stop"},{label:"Restart",value:"restart"},{label:"Enable",value:"enable"},{label:"Disable",value:"disable"}],mdxType:"Tabs"},(0,s.kt)(i.Z,{value:"status",mdxType:"TabItem"},(0,s.kt)(o.Z,{children:"sudo systemctl status "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(i.Z,{value:"start",mdxType:"TabItem"},(0,s.kt)(o.Z,{children:"sudo systemctl start "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(i.Z,{value:"stop",mdxType:"TabItem"},(0,s.kt)(o.Z,{children:"sudo systemctl stop "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(i.Z,{value:"restart",mdxType:"TabItem"},(0,s.kt)(o.Z,{children:"sudo systemctl restart "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(i.Z,{value:"enable",mdxType:"TabItem"},(0,s.kt)(o.Z,{children:"sudo systemctl enable "+a.service,className:"bash",mdxType:"CodeBlock"})),(0,s.kt)(i.Z,{value:"disable",mdxType:"TabItem"},(0,s.kt)(o.Z,{children:"sudo systemctl disable "+a.service,className:"bash",mdxType:"CodeBlock"})))))}v.isMDXComponent=!0}}]);